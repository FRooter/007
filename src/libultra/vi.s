# Goldeneye 007 (U) disassembly and split file
# generated by n64split v0.4a - N64 ROM splitter

# assembler directives
.set noat      # allow manual use of $at
.set noreorder # don't insert nops after branches
.set gp=64

.include "macros.inc"


.section .text, "ax" 
.section .text
glabel __osViInit
/* 019650 70018A50 27BDFFE8 */  addiu $sp, $sp, -0x18
/* 019654 70018A54 AFBF0014 */  sw    $ra, 0x14($sp)
/* 019658 70018A58 3C048002 */  lui   $a0, %hi(vi)
/* 01965C 70018A5C 24847FE0 */  addiu $a0, %lo(vi) # addiu $a0, $a0, 0x7fe0
/* 019660 70018A60 0C005F10 */  jal   bzero
/* 019664 70018A64 24050060 */   li    $a1, 96
/* 019668 70018A68 3C0E8002 */  lui   $t6, %hi(vi) 
/* 01966C 70018A6C 25CE7FE0 */  addiu $t6, %lo(vi) # addiu $t6, $t6, 0x7fe0
/* 019670 70018A70 3C018003 */  lui   $at, %hi(__osViCurr)
/* 019674 70018A74 AC2E8040 */  sw    $t6, %lo(__osViCurr)($at)
/* 019678 70018A78 3C018003 */  lui   $at, %hi(__osViNext)
/* 01967C 70018A7C 25CF0030 */  addiu $t7, $t6, 0x30
/* 019680 70018A80 AC2F8044 */  sw    $t7, %lo(__osViNext)($at)
/* 019684 70018A84 24180001 */  li    $t8, 1
/* 019688 70018A88 A5D80032 */  sh    $t8, 0x32($t6)
/* 01968C 70018A8C 3C088003 */  lui   $t0, %hi(__osViCurr) 
/* 019690 70018A90 8D088040 */  lw    $t0, %lo(__osViCurr)($t0)
/* 019694 70018A94 24190001 */  li    $t9, 1
/* 019698 70018A98 3C098003 */  lui   $t1, %hi(copy_osTvType) 
/* 01969C 70018A9C A5190002 */  sh    $t9, 2($t0)
/* 0196A0 70018AA0 8D298048 */  lw    $t1, %lo(copy_osTvType)($t1)
/* 0196A4 70018AA4 1120000B */  beqz  $t1, .L70018AD4
/* 0196A8 70018AA8 00000000 */   nop   
/* 0196AC 70018AAC 3C0B8003 */  lui   $t3, %hi(__osViNext) 
/* 0196B0 70018AB0 8D6B8044 */  lw    $t3, %lo(__osViNext)($t3)
/* 0196B4 70018AB4 3C0A8003 */  lui   $t2, %hi(osViModeNtscLan1) 
/* 0196B8 70018AB8 254A8320 */  addiu $t2, %lo(osViModeNtscLan1) # addiu $t2, $t2, -0x7ce0
/* 0196BC 70018ABC 3C0C02E6 */  lui   $t4, (0x02E6D354 >> 16) # lui $t4, 0x2e6
/* 0196C0 70018AC0 358CD354 */  ori   $t4, (0x02E6D354 & 0xFFFF) # ori $t4, $t4, 0xd354
/* 0196C4 70018AC4 3C018003 */  lui   $at, %hi(osViClock)
/* 0196C8 70018AC8 AD6A0008 */  sw    $t2, 8($t3)
/* 0196CC 70018ACC 1000000A */  b     .L70018AF8
/* 0196D0 70018AD0 AC2C804C */   sw    $t4, %lo(osViClock)($at)
.L70018AD4:
/* 0196D4 70018AD4 3C0F8003 */  lui   $t7, %hi(__osViNext) 
/* 0196D8 70018AD8 8DEF8044 */  lw    $t7, %lo(__osViNext)($t7)
/* 0196DC 70018ADC 3C0D8003 */  lui   $t5, %hi(osViModePalLan1) 
/* 0196E0 70018AE0 25AD8370 */  addiu $t5, %lo(osViModePalLan1) # addiu $t5, $t5, -0x7c90
/* 0196E4 70018AE4 3C1802F5 */  lui   $t8, (0x02F5B2D2 >> 16) # lui $t8, 0x2f5
/* 0196E8 70018AE8 3718B2D2 */  ori   $t8, (0x02F5B2D2 & 0xFFFF) # ori $t8, $t8, 0xb2d2
/* 0196EC 70018AEC 3C018003 */  lui   $at, %hi(osViClock)
/* 0196F0 70018AF0 ADED0008 */  sw    $t5, 8($t7)
/* 0196F4 70018AF4 AC38804C */  sw    $t8, %lo(osViClock)($at)
.L70018AF8:
/* 0196F8 70018AF8 3C198003 */  lui   $t9, %hi(__osViNext) 
/* 0196FC 70018AFC 8F398044 */  lw    $t9, %lo(__osViNext)($t9)
/* 019700 70018B00 240E0020 */  li    $t6, 32
/* 019704 70018B04 3C088003 */  lui   $t0, %hi(__osViNext) 
/* 019708 70018B08 A72E0000 */  sh    $t6, ($t9)
/* 01970C 70018B0C 8D088044 */  lw    $t0, %lo(__osViNext)($t0)
/* 019710 70018B10 3C0BA440 */  lui   $t3, %hi(VI_CURRENT_REG) # $t3, 0xa440
/* 019714 70018B14 8D090008 */  lw    $t1, 8($t0)
/* 019718 70018B18 8D2A0004 */  lw    $t2, 4($t1)
/* 01971C 70018B1C AD0A000C */  sw    $t2, 0xc($t0)
/* 019720 70018B20 8D6C0010 */  lw    $t4, %lo(VI_CURRENT_REG)($t3)
/* 019724 70018B24 2D81000B */  sltiu $at, $t4, 0xb
/* 019728 70018B28 14200006 */  bnez  $at, .L70018B44
/* 01972C 70018B2C 00000000 */   nop   
.L70018B30:
/* 019730 70018B30 3C0DA440 */  lui   $t5, %hi(VI_CURRENT_REG) # $t5, 0xa440
/* 019734 70018B34 8DAF0010 */  lw    $t7, %lo(VI_CURRENT_REG)($t5)
/* 019738 70018B38 2DE1000B */  sltiu $at, $t7, 0xb
/* 01973C 70018B3C 1020FFFC */  beqz  $at, .L70018B30
/* 019740 70018B40 00000000 */   nop   
.L70018B44:
/* 019744 70018B44 3C18A440 */  lui   $t8, 0xa440
/* 019748 70018B48 0C0062DC */  jal   __osViSwapContext
/* 01974C 70018B4C AF000000 */   sw    $zero, ($t8)
/* 019750 70018B50 8FBF0014 */  lw    $ra, 0x14($sp)
/* 019754 70018B54 27BD0018 */  addiu $sp, $sp, 0x18
/* 019758 70018B58 03E00008 */  jr    $ra
/* 01975C 70018B5C 00000000 */   nop   


.section .data
glabel _libultraosviSegmentDataStart

glabel vi
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0

glabel vi_buffer_next
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0
.byte    0,   0,   0,   0,   0,   0,   0,   0

glabel __osViCurr
.word vi

glabel __osViNext
.word vi_buffer_next

glabel copy_osTvType
.word 1

glabel osViClock
.word 48681812

glabel _libultraosviSegmentDataEnd
.align 4

